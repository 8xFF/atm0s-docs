"use strict";(self.webpackChunkatm_0_s_docs=self.webpackChunkatm_0_s_docs||[]).push([[8269],{7807:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>o,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var n=t(3010),i=t(1421);const a={title:"Publishing a stream"},r="Publishing a stream",c={id:"client/publishing",title:"Publishing a stream",description:"Publish a stream after creating a session",source:"@site/docs/client/publishing.mdx",sourceDirName:"client",slug:"/client/publishing",permalink:"/media-docs/docs/client/publishing",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/client/publishing.mdx",tags:[],version:"current",frontMatter:{title:"Publishing a stream"},sidebar:"tutorialSidebar",previous:{title:"Consume a stream",permalink:"/media-docs/docs/client/consuming"},next:{title:"Server",permalink:"/media-docs/docs/category/server"}},o={},l=[{value:"Publish a stream after creating a session",id:"publish-a-stream-after-creating-a-session",level:2},{value:"Publish a stream when creating a session",id:"publish-a-stream-when-creating-a-session",level:2},{value:"Screen sharing",id:"screen-sharing",level:2},{value:"Simulcast",id:"simulcast",level:2}];function d(e){const s={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.h1,{id:"publishing-a-stream",children:"Publishing a stream"}),"\n",(0,n.jsx)(s.h2,{id:"publish-a-stream-after-creating-a-session",children:"Publish a stream after creating a session"}),"\n",(0,n.jsx)(s.p,{children:"To publish a stream, you just need to create a publisher and pass it a stream to publish. The publisher will automatically start publishing the stream to the server."}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-js",metastring:'title="Javascript"',children:'const stream = await navigator.mediaDevices.getUserMedia({\n  video: true,\n});\nconst config = { name: "video_main", kind: "video" };\nconst publisher = session.createPublisher(config);\npublisher.switch(stream); // add the stream to the publisher\n'})}),"\n",(0,n.jsx)(s.h2,{id:"publish-a-stream-when-creating-a-session",children:"Publish a stream when creating a session"}),"\n",(0,n.jsx)(s.p,{children:"You can also publish a stream when creating a session. To do so, you need to pass the stream to the senders array of the session."}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-js",metastring:'title="Javascript"',children:'const stream = .. // get the stream\nconst session = createSession(gatewayUrls, {\n  senders: [\n    {\n      stream: stream,\n      name: "video_main",\n      kind: "video",\n    },\n  ],\n});\n'})}),"\n",(0,n.jsx)(s.h2,{id:"screen-sharing",children:"Screen sharing"}),"\n",(0,n.jsxs)(s.p,{children:["To share your screen, you can use the ",(0,n.jsx)(s.code,{children:"getDisplayMedia()"})," method from ",(0,n.jsx)(s.code,{children:"mediaDevices"})," API to acquire the mediastream. Then in the sender/publisher config, you need to set the ",(0,n.jsx)(s.code,{children:"screen"})," property to ",(0,n.jsx)(s.code,{children:"true"}),"."]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-js",metastring:'title="Javascript"',children:'const config = { name: "screen", kind: "video", screen: true };\n'})}),"\n",(0,n.jsx)(s.h2,{id:"simulcast",children:"Simulcast"}),"\n",(0,n.jsxs)(s.p,{children:["Simulcast is a technique that allows you to send multiple versions of the same video stream at different resolutions and bitrates. This allows the receiver to choose the best version of the stream based on their network conditions.\nYou can enable simulcast by setting the ",(0,n.jsx)(s.code,{children:"simulcast"})," property to ",(0,n.jsx)(s.code,{children:"true"})," in the sender/publisher config."]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-js",metastring:'title="Javascript"',children:'const config = { name: "video_main", kind: "video", simulcast: true };\n'})})]})}function h(e={}){const{wrapper:s}={...(0,i.a)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},1421:(e,s,t)=>{t.d(s,{Z:()=>c,a:()=>r});var n=t(5170);const i={},a=n.createContext(i);function r(e){const s=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),n.createElement(a.Provider,{value:s},e.children)}}}]);