"use strict";(self.webpackChunkatm_0_s_docs=self.webpackChunkatm_0_s_docs||[]).push([[531],{5926:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>i,contentTitle:()=>o,default:()=>h,frontMatter:()=>n,metadata:()=>d,toc:()=>l});var r=t(3010),a=t(1421);const n={title:"Server Usage"},o="Server Usage",d={id:"server/usage",title:"Server Usage",description:"Start a webrtc node only",source:"@site/docs/server/usage.md",sourceDirName:"server",slug:"/server/usage",permalink:"/media-docs/docs/server/usage",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/server/usage.md",tags:[],version:"current",frontMatter:{title:"Server Usage"},sidebar:"tutorialSidebar",previous:{title:"Access Token",permalink:"/media-docs/docs/server/token"}},i={},l=[{value:"Start a webrtc node only",id:"start-a-webrtc-node-only",level:2},{value:"Start entire cluster",id:"start-entire-cluster",level:2},{value:"Start RTMP session",id:"start-rtmp-session",level:2}];function c(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.h1,{id:"server-usage",children:"Server Usage"}),"\n",(0,r.jsx)(s.h2,{id:"start-a-webrtc-node-only",children:"Start a webrtc node only"}),"\n",(0,r.jsx)(s.p,{children:"For simple testing, we can start single node which support Webrtc for testing with Whip and Whep"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{children:"atm0s-media-server --http-port 3200 webrtc\n"})}),"\n",(0,r.jsxs)(s.p,{children:["After that we can access ",(0,r.jsx)(s.code,{children:"http://localhost:3000/samples"})," to see all embeded samples"]}),"\n",(0,r.jsx)(s.h2,{id:"start-entire-cluster",children:"Start entire cluster"}),"\n",(0,r.jsx)(s.p,{children:"In cluster mode, each module needs to be on a separate node. This setup can run on a single machine or multiple machines, whether they are connected via a public or private network."}),"\n",(0,r.jsx)(s.p,{children:"The Inner-Gateway module routes user traffic to the most suitable media server node."}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"atm0s-media-server --node-id 10 --sdn-port 10010 --http-port 3000 gateway\n"})}),"\n",(0,r.jsx)(s.p,{children:"Afterward, the gateway prints out its address in the format: 10@/ip4/127.0.0.1/udp/10001/ip4/127.0.0.1/tcp/10001. This address serves as the seed node for other nodes joining the cluster."}),"\n",(0,r.jsx)(s.p,{children:"The WebRTC module serves users with either an SDK or a Whip, Whep client."}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"atm0s-media-server --node-id 21 --http-port 3001 --seeds ABOVE_GATEWAY_ADDR webrtc\n"})}),"\n",(0,r.jsx)(s.p,{children:"The RTMP module serves users with an RTMP broadcaster such as OBS or Streamyard."}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"atm0s-media-server --node-id 30 --seeds ABOVE_GATEWAY_ADDR rtmp\n"})}),"\n",(0,r.jsx)(s.p,{children:"The SIP module serves users with a SIP endpoint for integration with telephone providers."}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"atm0s-media-server --node-id 40 --seeds ABOVE_GATEWAY_ADDR sip\n"})}),"\n",(0,r.jsxs)(s.p,{children:["You can now access the sample page at the URL: ",(0,r.jsx)(s.a,{href:"http://localhost:3000/samples/webrtc/",children:"http://localhost:3000/samples/webrtc/"}),". There, you will find two pages: Whip Broadcast and Whep Viewer."]}),"\n",(0,r.jsx)(s.p,{children:"Please note that the inner-gateway selects nodes based on usage, routing to the same media-server instance until it reaches high usage. For testing media exchange between systems, you can start more than one WebRTC module as needed."}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{children:"atm0s-media-server --node-id 22 --http-port 3002 --seeds ABOVE_GATEWAY_ADDR webrtc\natm0s-media-server --node-id 23 --http-port 3003 --seeds ABOVE_GATEWAY_ADDR webrtc\n"})}),"\n",(0,r.jsx)(s.p,{children:"Afterward, you can directly access the samples on each WebRTC node:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["First media-server: ",(0,r.jsx)(s.a,{href:"http://localhost:3001/samples/",children:"http://localhost:3001/samples/"})]}),"\n",(0,r.jsxs)(s.li,{children:["Second media-server: ",(0,r.jsx)(s.a,{href:"http://localhost:3002/samples/",children:"http://localhost:3002/samples/"})]}),"\n",(0,r.jsxs)(s.li,{children:["Third media-server: ",(0,r.jsx)(s.a,{href:"http://localhost:3003/samples/",children:"http://localhost:3003/samples/"})]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:"Each node also expose a metric dashboard here:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["Gateway: ",(0,r.jsx)(s.a,{href:"http://localhost:3000/dashboard/",children:"http://localhost:3000/dashboard/"})]}),"\n",(0,r.jsxs)(s.li,{children:["Media1: ",(0,r.jsx)(s.a,{href:"http://localhost:3001/dashboard/",children:"http://localhost:3001/dashboard/"})]}),"\n",(0,r.jsxs)(s.li,{children:["Media2: ",(0,r.jsx)(s.a,{href:"http://localhost:3002/dashboard/",children:"http://localhost:3002/dashboard/"})]}),"\n",(0,r.jsxs)(s.li,{children:["Media3: ",(0,r.jsx)(s.a,{href:"http://localhost:3003/dashboard/",children:"http://localhost:3003/dashboard/"})]}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"start-rtmp-session",children:"Start RTMP session"}),"\n",(0,r.jsx)(s.p,{children:"Instead of publishing with the Whip client, we can use any RTMP client, such as OBS, to publish to the following stream:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["Server: ",(0,r.jsx)(s.code,{children:"rtmp://RTMP_NODE_IP:1935/live"})]}),"\n",(0,r.jsxs)(s.li,{children:["Stream Key: ",(0,r.jsx)(s.code,{children:"above generated rtmp token"})]}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,a.a)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},1421:(e,s,t)=>{t.d(s,{Z:()=>d,a:()=>o});var r=t(5170);const a={},n=r.createContext(a);function o(e){const s=r.useContext(n);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),r.createElement(n.Provider,{value:s},e.children)}}}]);