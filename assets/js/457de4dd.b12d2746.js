"use strict";(self.webpackChunkatm_0_s_docs=self.webpackChunkatm_0_s_docs||[]).push([[8140],{8141:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var r=s(3010),n=s(1421);const i={title:"Core Primitives"},c="Core Primitives",o={id:"concepts/core",title:"Core Primitives",description:"Overview",source:"@site/docs/concepts/core.md",sourceDirName:"concepts",slug:"/concepts/core",permalink:"/atm0s-docs/docs/concepts/core",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/concepts/core.md",tags:[],version:"current",frontMatter:{title:"Core Primitives"},sidebar:"tutorialSidebar",previous:{title:"Concepts",permalink:"/atm0s-docs/docs/category/concepts"},next:{title:"Quickstart",permalink:"/atm0s-docs/docs/quickstart"}},a={},d=[{value:"Overview",id:"overview",level:2},{value:"Session",id:"session",level:2},{value:"Senders",id:"senders",level:2},{value:"Receivers",id:"receivers",level:2},{value:"Track",id:"track",level:2}];function l(e){const t={h1:"h1",h2:"h2",p:"p",...(0,n.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"core-primitives",children:"Core Primitives"}),"\n",(0,r.jsx)(t.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsx)(t.p,{children:"Atm0s has a few core constructs: session, senders, receivers, and tracks. For the most basic,\na Session is the main object representing a connection to the media server, which will tie to a pair of roomId and peerId.\nSenders and Receivers are the carriers of the tracks, they decide which track will be sent and received."}),"\n",(0,r.jsx)(t.h2,{id:"session",children:"Session"}),"\n",(0,r.jsx)(t.h2,{id:"senders",children:"Senders"}),"\n",(0,r.jsx)(t.h2,{id:"receivers",children:"Receivers"}),"\n",(0,r.jsx)(t.h2,{id:"track",children:"Track"})]})}function u(e={}){const{wrapper:t}={...(0,n.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},1421:(e,t,s)=>{s.d(t,{Z:()=>o,a:()=>c});var r=s(5170);const n={},i=r.createContext(n);function c(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:c(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);